<html viewtype="{{viewTypeToken}}"

        {{#isChannelView}}
            channelname="{{channelName}}" 
        {{/isChannelView}}

        {{#isPrivateMessageView}}
            channelname="{{channelName}}"
        {{/isPrivateMessageView}}

        {{#isUtilityView}}
            channelname="{{channelName}}"
        {{/isUtilityView}}

        {{! The operating system version declaration allows CSS selectors to target specific versions. }}
        systemversion="{{operatingSystemVersion}}"

        dir="{{textDirectionToken}}">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset={{userConfiguredTextEncoding}}">

        <link rel="stylesheet" type="text/css" href="{{activeStyleAbsolutePath}}/design.css?{{cacheToken}}" charset="UTF-8">

        <script src="{{applicationResourcePath}}/JavaScript/API/core.js" type="text/javascript" charset="UTF-8"></script>
        <script src="{{applicationResourcePath}}/JavaScript/API/corePrivate.js" type="text/javascript" charset="UTF-8"></script>

        <script type="text/javascript">
            Textual.initializeCore("{{applicationResourcePath}}");
        </script>

        <script src="{{activeStyleAbsolutePath}}/scripts.js?{{cacheToken}}" type="text/javascript" charset="UTF-8"></script>

        <style type="text/css">
            html, body, body[type], body {
                font-family: '{{userConfiguredFontName}}';
                font-size: {{userConfiguredFontSize}}pt;
            }

            {{#nicknameIndentationAvailable}}
                body div#body_home p {
                    margin-left: {{predefinedTimestampWidth}}px;
                    text-indent: -{{predefinedTimestampWidth}}px;
                }

                body .time {
                    width: {{predefinedTimestampWidth}}px;
                }
            {{/nicknameIndentationAvailable}}

            {{!
                The following CSS definitions exist for the internal use of Textual.
                If you are a style developer reading this and plan on using custom
                templates, then DO NOT modify these. You can touch anything else you
                want, but we are trying to have some consistency between styles.
            }}

            /* Print actions */
            @media print {
                #topic_bar {
                    display: none;
                }
            }

            /* Reserved lines */
            /* Fixed width font line */
            tt {
                font-family: "Menlo" !important;
            }

            /* mIRC Color Codes */
            .effect[color-number='0']  { color: #ffffff; }
            .effect[color-number='1']  { color: #000000; }
            .effect[color-number='2']  { color: #000088; }
            .effect[color-number='3']  { color: #008800; }
            .effect[color-number='4']  { color: #ff0000; }
            .effect[color-number='5']  { color: #880000; }
            .effect[color-number='6']  { color: #880088; }
            .effect[color-number='7']  { color: #ff8800; }
            .effect[color-number='8']  { color: #ffff00; }
            .effect[color-number='9']  { color: #00ff00; }
            .effect[color-number='10'] { color: #008888; }
            .effect[color-number='11'] { color: #00ffff; }
            .effect[color-number='12'] { color: #0000ff; }
            .effect[color-number='13'] { color: #ff00ff; }
            .effect[color-number='14'] { color: #888888; }
            .effect[color-number='15'] { color: #cccccc; }

            .effect[bgcolor-number='0']  { background-color: #ffffff; }
            .effect[bgcolor-number='1']  { background-color: #000000; }
            .effect[bgcolor-number='2']  { background-color: #000088; }
            .effect[bgcolor-number='3']  { background-color: #008800; }
            .effect[bgcolor-number='4']  { background-color: #ff0000; }
            .effect[bgcolor-number='5']  { background-color: #880000; }
            .effect[bgcolor-number='6']  { background-color: #880088; }
            .effect[bgcolor-number='7']  { background-color: #ff8800; }
            .effect[bgcolor-number='8']  { background-color: #ffff00; }
            .effect[bgcolor-number='9']  { background-color: #00ff00; }
            .effect[bgcolor-number='10'] { background-color: #008888; }
            .effect[bgcolor-number='11'] { background-color: #00ffff; }
            .effect[bgcolor-number='12'] { background-color: #0000ff; }
            .effect[bgcolor-number='13'] { background-color: #ff00ff; }
            .effect[bgcolor-number='14'] { background-color: #888888; }
            .effect[bgcolor-number='15'] { background-color: #cccccc; }
        </style>
    </head>

    <body viewtype="{{viewTypeToken}}"

        onload="Textual.viewBodyDidLoadInt()"

        {{#usesCustomScrollers}}
            customscroller="true"
        {{/usesCustomScrollers}}

        {{#isChannelView}}
            channelname="{{channelName}}"
        {{/isChannelView}}

        {{#isPrivateMessageView}}
            channelname="{{channelName}}"
        {{/isPrivateMessageView}}

        {{#isUtilityView}}
            channelname="{{channelName}}"
        {{/isUtilityView}}

        dir="{{textDirectionToken}}">
            {{! The elements "body_home," "historic_messages," "loading_screen," 
            "topic_bar," and "mark" must always remain the same as the ID value 
            of these elements are used internally by Textual. }}

            <div id="loading_screen">View is Loadingâ€¦</div>

            {{#isChannelView}}
                <div id="topic_bar" ondblclick="Textual.topicBarDoubleClicked()">(No Topic)</div>
            {{/isChannelView}}

            <div id="body_home">
                <div id="historic_messages"

                {{#isReloadingStyle}}
                isreload="true"
                {{^isReloadingStyle}}
                isreload="false"
                {{/isReloadingStyle}} ></div>
            </div>

            <a name="most_recent_anchor" id="most_recent_anchor" href="#most_recent_anchor"></a>
    </body>
</html>
